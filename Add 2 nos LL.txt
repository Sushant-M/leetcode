/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode sol = new ListNode(0);
        ListNode head = sol;
        int carry = 0;
        while(l1!=null && l2!=null){
            int sum = l1.val + l2.val + carry;
            int no=0;
            if(sum>9){
                carry=1;
                no = sum-10;
            }else{no = sum;carry=0;}
            ListNode temp = new ListNode(no);
            sol.next = temp;
            sol=sol.next;
            l1=l1.next;
            l2=l2.next;
        }
        
        //If l1 or l2 is left over then append it with carry.
        
        while(l1 !=null){
            int sum = l1.val + carry;
            int no = 0;
            if(sum>9){
                carry = 1;
                no = sum-10;
            }else{no=sum;carry=0;}
            ListNode temp = new ListNode(no);
            sol.next=temp;
            sol=sol.next;
            l1=l1.next;
        }
        
        while(l2 !=null){
            int sum = l2.val + carry;
            int no = 0;
            if(sum>9){
                carry = 1;
                no = sum-10;
            }else{no=sum; carry=0;}
            ListNode temp = new ListNode(no);
            sol.next=temp;
            sol=sol.next;
            l2=l2.next;
        }
        if(carry==1){
            sol.next = new ListNode(1);
        }
        return head.next;
    }
}